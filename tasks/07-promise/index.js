/**
 * Задача #1
 *
 * Сверстать форму с полем для ввода и кнопкой submit. В поле ввода необходимо ввести любой никнейм,
 * после подтверждения формы отправить запрос на api.github (https://api.github.com/users/{nickname})
 * на получение юзера, если юзер с таким никнеймом существует, показать его аватар, иначе вывести ошибку,
 * что такого пользователя не существует.
 */

/** Ваш код */


/**
 * Задача #2
 *
 * Есть два гитхаб юзера, необходимо в два последовательных GET запроса (https://api.github.com/users/{nickname})
 * получить их  и вывести в консоль.
 */

/** Ваш код */


/**
 * Задача #3
 *
 * Есть два гитхаб юзера, необходимо отправить два параллельных GET запроса (https://api.github.com/users/{nickname})
 * и вывести данные того пользователя, ответ о котором придет раньше. В случае,
 * если ответ не пришел в течении 100мс, вывести в консоль ошибку. (использовать Promise.race)
 */

/** Ваш код */


/**
 * Задача #4 (Дополнительная)
 *
 * Написать обертку Promise над XHR (как в примерах выше), имеющую метод cancel - для отмены запроса.
 * Имеется поле ввода емейла для получения информации о пользователе, поле очень похоже на google поиск,
 * а именно на каждый ввод пользователя оно отправляет запрос на https://api.github.com/users/{nickname},
 * где nickname - значение инпута, инпут имеет throttling в 300 миллисекунд и на каждый ввод отправляет
 * запросы на получение информации о введенном емейле (то есть, если в течении 300мс юзер изменил значение поля,
 * то запрос с предыдущим значением не отправляется, а создается новый, и будет он отправлен по истечении 300мс).
 * Если предыдущий запрос не успел завершиться, а юзер изменил значение поля и необходимо отправить новый запрос,
 * то активный запрос нужно отменить через метод cancel (обертка над xhr.abort) и создавать новый.
 * Не должно получиться такого, что одновременно обрабатываются два запроса на получение информации о пользователе.
 */

/** Ваш код */
